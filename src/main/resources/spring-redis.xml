<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--
	     Spring容器仅允许最多定义一个PropertyPlaceholderConfigurer
	     (或<context:property-placeholder/>)，
	    其余的会被Spring忽略掉。
		解决方法就是改成<context:property-placeholder location="classpath:redis.properties" 
		ignore-unresolvable="true"/>
		-->
	<!--<context:property-placeholder location="classpath:redis.properties"
		ignore-unresolvable="true" />-->
	<!-- 配置redis的连接池对象 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3 -->
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
		<!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个 -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!--在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	</bean>

	<!--redis连接工厂 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<!--IP地址 -->
		<property name="hostName" value="${redis.hostName}"></property>
		<!--端口号 -->
		<property name="port" value="${redis.port}"></property>
		<!--客户端超时时间单位是毫秒 -->
		<property name="timeout" value="${redis.timeout}"></property>
	</bean>


	<!--redis操作模版,使用该对象可以操作redis -->
	<bean id="stringRedisTemplate"  class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!--(序列化器)如果不配置Serializer，那么存储的时候缺省使用String，如果用User类型存储，那么会提示错误User can't 
			cast to String！！ -->
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>

		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>

		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
		<!--开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>



	<!--自定义redis工具类,在需要缓存的地方注入此类 -->
	<bean id="redisUtil" class="com.yyr.common.util.RedisUtil">
		<property name="redisTemplate" ref="stringRedisTemplate" />
	</bean>


</beans>
